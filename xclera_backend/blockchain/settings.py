"""
Django settings for blockchain project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from pickle import FALSE
from dotenv import load_dotenv
import os
import secrets
from datetime import timedelta

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-7_9y9s10hig@85b^v6d32&-!c7-9zrnu$4b(aq5ail&n(28mhi"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG= True

ALLOWED_HOSTS = ["192.168.100.8","*"]


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-party apps
    "rest_framework",
    "rest_framework.authtoken",
    # Project apps
    "myapp",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Custom middleware
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    "myapp.middleware.AuthExemptMiddleware",
    'myapp.middleware.ProtectedFieldsMiddleware'
]

CORS_ALLOW_ALL_ORIGINS = True


# JWT Settings
JWT_SECRET_KEY = os.getenv("JWT_SECRET_KEY", secrets.token_hex(32))
JWT_EXPIRATION_DELTA = timedelta(days=7)


# Web3 and Blockchain settings
WEB3_PROVIDER_URL = os.getenv('WEB3_PROVIDER_URL', 'http://127.0.0.1:8545')
CHAIN_ID = int(os.getenv('CHAIN_ID', '31337'))
CONTRACT_ADDRESS = os.getenv('CONTRACT_ADDRESS', '0x5fbdb2315678afecb367f032d93f642f64180aa3')
ROOT_USER_ADDRESS = os.getenv('ROOT_USER_ADDRESS', '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266')
COMPANY_WALLET_ADDRESS = os.getenv('COMPANY_WALLET_ADDRESS', '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266')




DEVELOPER_MODE = os.getenv("DEVELOPER_MODE", "False").lower() == "true"

if DEVELOPER_MODE:
    print("Developer mode enabled: All API endpoints will be accessible without authentication")
    DEFAULT_PERMISSION_CLASSES = ["rest_framework.permissions.AllowAny"]
else:
    DEFAULT_PERMISSION_CLASSES = ["rest_framework.permissions.IsAuthenticated"]

# Update your REST_FRAMEWORK settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "myapp.authentication.Web3Authentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": DEFAULT_PERMISSION_CLASSES,  
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 20,
    "EXCEPTION_HANDLER": "rest_framework.views.exception_handler",
}
APPEND_SLASH = False

AUTH_EXEMPT_ROUTES = [
    "/api/auth/nonce/",
    "/api/auth/authenticate/",
    "/api/register/",
    "/api/login"
]
# Session settings
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
SESSION_COOKIE_AGE = 86400  # 24 hours in seconds

ROOT_URLCONF = "blockchain.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "blockchain.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


"""
# CREATE DATABASE in linux system as below: 

sudo mysql -e "CREATE USER 'xclera_user'@'localhost';"
sudo mysql -e "GRANT ALL PRIVILEGES ON xclera.* TO 'xclera_user'@'localhost';"
sudo mysql -e "FLUSH PRIVILEGES;"
"""

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("DB_NAME"),
        "USER": os.getenv("DB_USER"),
        "PASSWORD": os.getenv("DB_PASSWORD"),
        "HOST": "localhost",
        "PORT": "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"


BASE_DIR_PATH = str(BASE_DIR)
CONTRACT_ABI_PATH = os.getenv(
    'CONTRACT_ABI_PATH', 
    os.path.join(BASE_DIR_PATH, 'myapp', 'static', 'contract_abi.json')
)

# Ensure the ABI file exists
if not os.path.exists(CONTRACT_ABI_PATH):
    print(f"WARNING: Contract ABI file not found at {CONTRACT_ABI_PATH}")
    print("Please ensure you've copied the ABI file from deployments/ to the correct location")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
